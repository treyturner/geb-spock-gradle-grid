plugins {
    id "com.github.erdi.webdriver-binaries" version "3.2"
}

ext {
    drivers = ['chrome', 'chromeHeadless', 'firefox', 'firefoxHeadless']

    ext {
        gebVersion = '7.0'
        chromeDriverVersion = '126.0.6478.126'
        geckoDriverVersion = '0.33.0'
    }
}

dependencies {
    //our utility package
    implementation project(':util')

    //geb
    implementation "org.gebish:geb-spock:$gebVersion"
}

webdriverBinaries {
    // Rather than depend on an external resource, we configure
    // driver URLs ourselves in ../driver-urls.json
    chromedriver {
        version = chromeDriverVersion
        fallbackTo32Bit = true
    }
    geckodriver geckoDriverVersion
    driverUrlsConfiguration = resources.text.fromFile('../driver-urls.json')
}

drivers.each { driver ->
    tasks.register("${driver}Test", Test, {
        group JavaBasePlugin.VERIFICATION_GROUP
        systemProperty 'geb.browser', driver
        useJUnitPlatform()
    })
}

test {
    enabled = false

    // Run ALL configured drivers during 'test' command
    //dependsOn drivers.collect { tasks["${it}Test"]}

    // Run only chrome during 'test' command
    dependsOn chromeTest
}

tasks.withType(Test).configureEach {
    // Continue executing tests after a failure
    ignoreFailures = true
}
